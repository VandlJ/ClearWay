---
- name: Create deployment directory
  ansible.builtin.file:
    path: "{{ app_base_dir }}/{{ app_name }}-{{ ansible_date_time.date }}-{{ ansible_date_time.time | regex_replace(':', '') }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0755'
  become: yes
  register: new_deployment_dir

- name: Ensure frontend source directory exists
  ansible.builtin.file:
    path: "/tmp/frontend-sync"
    state: directory
    mode: '0755'
  delegate_to: localhost

- name: Ensure backend source directory exists
  ansible.builtin.file:
    path: "/tmp/backend-sync"
    state: directory
    mode: '0755'
  delegate_to: localhost

- name: Prepare frontend files for synchronization
  ansible.builtin.shell: |
    if [ -d "{{ lookup('env', 'GITHUB_WORKSPACE') }}/frontend" ]; then
      cp -r {{ lookup('env', 'GITHUB_WORKSPACE') }}/frontend/* /tmp/frontend-sync/
    else
      mkdir -p /tmp/frontend-sync
      echo '{"name":"clearway-frontend","scripts":{"start":"next start"}}' > /tmp/frontend-sync/package.json
    fi
  delegate_to: localhost

- name: Prepare backend files for synchronization
  ansible.builtin.shell: |
    if [ -d "{{ lookup('env', 'GITHUB_WORKSPACE') }}/backend" ]; then
      cp -r {{ lookup('env', 'GITHUB_WORKSPACE') }}/backend/* /tmp/backend-sync/
    else
      mkdir -p /tmp/backend-sync
      echo '{"name":"clearway-backend"}' > /tmp/backend-sync/package.json
      echo 'console.log("Backend server running");' > /tmp/backend-sync/server.js
    fi
  delegate_to: localhost

- name: Synchronize frontend files
  ansible.builtin.synchronize:
    src: "/tmp/frontend-sync/"
    dest: "{{ new_deployment_dir.path }}/frontend/"
    rsync_opts:
      - "--exclude=node_modules"
      - "--exclude=.next"
  become: yes
  become_user: "{{ deploy_user }}"

- name: Synchronize backend files
  ansible.builtin.synchronize:
    src: "/tmp/backend-sync/"
    dest: "{{ new_deployment_dir.path }}/backend/"
    rsync_opts:
      - "--exclude=node_modules"
  become: yes
  become_user: "{{ deploy_user }}"

- name: Install frontend dependencies
  ansible.builtin.npm:
    path: "{{ new_deployment_dir.path }}/frontend"
    production: no  # Changed to include dev dependencies for build
  become: yes
  become_user: "{{ deploy_user }}"

- name: Build Next.js application
  ansible.builtin.shell: npm run build
  args:
    chdir: "{{ new_deployment_dir.path }}/frontend"
  become: yes
  become_user: "{{ deploy_user }}"

- name: Install backend dependencies
  ansible.builtin.npm:
    path: "{{ new_deployment_dir.path }}/backend"
    production: yes
  become: yes
  become_user: "{{ deploy_user }}"

- name: Update symbolic link to latest deployment
  ansible.builtin.file:
    src: "{{ new_deployment_dir.path }}"
    dest: "{{ app_base_dir }}/latest"
    state: link
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  become: yes
  notify:
    - Restart backend service
    - Restart frontend service
    - Save PM2 config

- name: Create ecosystem.config.js
  ansible.builtin.template:
    src: ecosystem.config.js.j2
    dest: "{{ app_base_dir }}/ecosystem.config.js"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: '0644'
  become: yes
  notify:
    - Restart backend service
    - Restart frontend service
    - Save PM2 config